//IQ Test:
https://www.codewars.com/kata/iq-test/train


//Problem
Bob is preparing to pass IQ test. The most frequent task in this test is to find out which one of the given numbers differs from the others. Bob observed that one number usually differs from the others in evenness. Help Bob â€” to check his answers, he needs a program that among the given numbers finds one that is different in evenness, and return a position of this number.

! Keep in mind that your task is to help Bob solve a real IQ test, which means indexes of the elements start from 1 (not 0)

##Examples :

iq_test("2 4 7 8 10") => 3 // Third number is odd, while the rest of the numbers are even

iq_test("1 2 1 1") => 2 // Second number is even, while the rest of the numbers are odd


//My Solution
def iq_test(numbers)
  array = numbers.split(' ')
  oe = []
  array.each do |item|
    oe << item.to_i.odd?
  end

  odds = oe.count(true)
  evens = oe.count(false)

  if odds > evens
    return oe.index(false)+1
  else
    return oe.index(true)+1
  end

end


//Working
With this solution, I first split my string of numbers out into an array.
I then created an empty array (oe) and then mapped into each position whether the corresponding element on the numbers array was odd or even using the .odd? method.
Once this was complet, I simply checked for whether there were more odds or evens in the array and if so, returned the corresponding position in the array (+1 for the non-indexed position).
